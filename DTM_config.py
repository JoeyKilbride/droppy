# This is a example configuration file required to run the DTM code.
# Every variable in this file must be specified and updated for each simulation.
# J. Kilbride - 10/10/23

import sys
sys.path.insert(0, r'INPUT PATH OF DTM code source files')
import numpy as np

prefix    = "Enter output filename prefix name here"
directory = r'PATH to search for and save all files'

# Specify droplet locations and sizes_____________

#CX,CY,CA,Rb = dpy.depositSquare(2,3,np.pi/2,1e-3)
#data = dpy.load_MDL_pickle(directory)
#data, xy, r, d = dpy.read_imageJ_coords(directory, "Centres")

saving = True # Boolean for saving graphs and pickles with the results
cmap_name = "nipy_spectral" # Name of the colour map used for plotting
compare = False # Compare to experimental data generated by the Measure droplet lifetime code.
filter_touching = False # filters out droplets which are touching (potentially not working!)
dt = 1             # timestep size (s)
Ambient_RH = 0.25 # Fraction [0-1]
Ambient_T = 22   # Degrees C
t=0                   # initial time (s) - should alway be zero (probably should be removed)
model="Masoud"           # which model to simulate with "Wray" or "Masoud (Wray may need updating)"
TL=0   # delay before updating the evaporation rates after a droplet has evaporated (s) - zero is normal for the model 
mode = "CCA" # constant contact area ("CCA"), constant contact radius ("CCR")
box_volume =  np.inf # volume of the box droplets are evaporating in. Infinite is normal.
rho_liquid = 997 # liquid density (kg/m^3)
A,B,C = 8.07131, 1730.63, 233.426 # Antoine Coefficients for liquid (Water here)
molar_mass = 18.01528 # molar mass of the liquid (Water here)
bg=None # gradient of linear bias 
bp=None # point of last droplet to evaporate
