# This is a example configuration file required to run the DTM code.
# Every variable in this file must be specified and updated for each simulation.
# J. Kilbride - 07/08/25#

import sys
sys.path.insert(0, r'DIR OF THE CODE')
#sys.path.insert(0, r'DIRECTORY TO /MDL_repo')
#import MDL_processing as MDL

## Uncomment below to use functions from other files to load droplet data
# import physics_methods as pm
# import io_methods as iom
# import visualisation_methods as vm
import numpy as np

prefix    = "PREFIX FOR OUTPUT FILES"
directory = r'OPERATION DIRECTORY'
#CX,CY,CA,Rb = dpy.depositSquare(N,s,ca,Rb)
#CX,CY,CA,Rb = depositLine(N,s,ca,Rb)
# defining a 3 droplet line #________________________
CX = np.array([-3,0,3])/1000 # X coordinates of the droplets (m)
CY = np.array([0,0,0]) # Y coordinates of the droplets (m)
Rb = np.ones(len(CX))/1000 # Base contact radius of the droplets (m)
CA = np.ones(len(CX))*np.pi/2 # Initial contact angle of the droplets (rads)
#____________________________________________________

saving = True # Boolean for saving graphs and pickles with the results
cmap_name = "nipy_spectral" # Name of the colour map used for plotting
compare = False # Compare to experimental data generated by the Measure droplet lifetime code.
dpi=100
export_nframes=30
filter_touching = False # filters out droplets which are touching (potentially not working!)
dt = 1             # timestep size (s)
Ambient_RHs = [0.25] # Fraction [0-1]
Ambient_T = 22   # Degrees C
t=0                   # initial time (s) - should alway be zero (probably should be removed)
model="Masoud"           # which model to simulate with "Wray" or "Masoud (Wray may need updating)"
nterms = 1  # number of terms in the Masoud expansion
TL=0   # delay before updating the evaporation rates after a droplet has evaporated (s) - zero is normal for the model 
mode = "CCA" # constant contact area ("CCA"), constant contact radius ("CCR")
box_volume =  np.inf # volume of the box droplets are evaporating in. Infinite is normal.
rho_liquid = 997 # liquid density (kg/m^3)
surface_tension = 72.8e-3 # Nm-1
D = "water" # "water": uses temperature dependent expression for water, otherwise uses specified value in m^2/s)
ABCs =[[8.07131, 1730.63, 233.426]] # Antoine Coefficients for liquid (this is water here)
molar_masses = [0.01801528] # molar mass of the liquid (kg/mol) (this is water)
bg=None # gradient of linear bias 
bp=None # point of last droplet to evaporate
rand=0 # leave in most cases
p_rate=0 # print rate in droplets/ second - 0 means all iniitalised at t=0.